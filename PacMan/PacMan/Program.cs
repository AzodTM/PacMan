using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;


namespace PacMan
{
    class Program
    {

        static void Main(string[] args)
        {   
             
            int xPacman = 23, yPacman = 45, score = 0; //координаты Пакмена
            #region Map PacMan World/Карта Мира Пакмена
            char[,] map = new char[55, 47]  //Игровая карта
            {   
               // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46   
                {'+','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','+'},//0
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//1
                {'|',' ','*','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//2
                {'|','Ж','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','Ж','|'},//3
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//4
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//5
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//6
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//7
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//8
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//9
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//10
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//11
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//12
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//13
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','+',' ','+','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','+',' ','|'},//14
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//15
                {'+','-','-','-','-','-','-','-','-','-','+',' ','|',' ','+','-','-','-','-','-','+',' ','|','-','|',' ','+','-','-','-','-','-','+',' ','|',' ','+','-','-','-','-','-','-','-','-','-','+'},//16
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//17
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','+','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','+',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//18
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//19
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//20
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//21
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//22
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//23
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//24
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//25
                {'+','-','-','-','-','-','-','-','-','-','+',' ','+','-','+',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','+','-','+',' ','+','-','-','-','-','-','-','-','-','-','+'},//26
                {'<',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','*',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','>'},//27 Центр
                {'+','-','-','-','-','-','-','-','-','-','+',' ','+','-','+',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','+','-','+',' ','+','-','-','-','-','-','-','-','-','-','+'},//28
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//29
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//30
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//31
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//32
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//33
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//34
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//35
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','+','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','+',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//36
                {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//37
                {'+','-','-','-','-','-','-','-','-','-','+',' ','|',' ','+','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','+',' ','|',' ','+','-','-','-','-','-','-','-','-','-','+'},//38
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//39
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','+',' ','+','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','+',' ','|'},//40
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//41
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//42
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//43
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//44
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ',' ',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//45
                {'|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','+','-','+',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//46
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//47
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//48
                {'|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|'},//49
                {'|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|',' ',' ',' ',' ',' ',' ',' ','|',' ','|'},//50
                {'|','Ж','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','*','|',' ',' ',' ',' ',' ',' ',' ','|','Ж','|'},//51
                {'|',' ','*','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|',' ','|',' ','+','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','+',' ','|'},//52
                {'|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|',' ','|','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*',' ','*','|'},//53
                {'+','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','+',' ','+','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','+'},//54
               // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46   
            };
            #endregion

            string moove = "mooveUp", tryMoove;
            



            while (true)
            {
                string s = "";
                Console.Clear();
                map[yPacman, xPacman] = '☺';
                Console.WriteLine(score);
                for (int i = 0; i < 55; i++)
                {
                    for (int j = 0; j < 47; j++)
                    {
                         s+= map[i, j];
                    }
                    s += '\n';
                }

                Console.Write(s);

                #region direction/направление

                

                   
                        
                        if (Console.KeyAvailable)
                        {

                            var way = Console.ReadKey(true).Key;

                                if (way == ConsoleKey.LeftArrow)
                                {
                                    tryMoove = "mooveLeft";
                                    if (map[yPacman, xPacman - 1] != '|' && map[yPacman, xPacman - 1] != '+' && map[yPacman, xPacman - 1] != '-')
                                        moove = tryMoove;
                                    
                                }
                                else if (way == ConsoleKey.RightArrow)
                                {
                                    tryMoove = "mooveRigth";
                                    if (map[yPacman, xPacman + 1] != '|' && map[yPacman, xPacman + 1] != '+' && map[yPacman, xPacman + 1] != '-')
                                        moove = tryMoove;
                                    
                                }
                                else if (way == ConsoleKey.UpArrow)
                                {
                                    tryMoove = "mooveUp";
                                    if (map[yPacman - 1, xPacman] != '|' && map[yPacman - 1, xPacman] != '+' && map[yPacman - 1, xPacman] != '-')
                                        moove = tryMoove;
                                    
                                }
                                else if (way == ConsoleKey.DownArrow)
                                {
                                    tryMoove = "mooveDown";
                                    if (map[yPacman + 1, xPacman] != '|' && map[yPacman + 1, xPacman] != '+' && map[yPacman + 1, xPacman] != '-')
                                        moove = tryMoove;
                                    
                                }
                        }

                                if (moove == "mooveLeft")
                                {
                                    if (map[yPacman, xPacman - 1] != '|' && map[yPacman, xPacman - 1] != '+' && map[yPacman, xPacman - 1] != '-')
                                    {
                                        if (map[yPacman, xPacman - 1] == '*')
                                        {
                                            score += 100;
                                        }
                                        else if (map[yPacman, xPacman - 1] == 'Ж')
                                        {
                                            score += 1000;
                                        }
                                        map[yPacman, xPacman] = ' ';
                                        xPacman = xPacman - 1;
                                    }
                                }
                                else if (moove == "mooveRigth")
                                {
                                    if (map[yPacman, xPacman + 1] != '|' && map[yPacman, xPacman + 1] != '+' && map[yPacman, xPacman + 1] != '-')
                                    {
                                        if (map[yPacman, xPacman + 1] == '*')
                                        {
                                            score += 100;
                                        }
                                        else if (map[yPacman, xPacman - 1] == 'Ж')
                                        {
                                            score += 1000;
                                        }
                                        map[yPacman, xPacman] = ' ';
                                        xPacman = xPacman + 1;
                                    }
                                }
                                else if (moove == "mooveUp")
                                {
                                    if (map[yPacman - 1, xPacman] != '|' && map[yPacman - 1, xPacman] != '+' && map[yPacman - 1, xPacman] != '-')
                                    {
                                        if (map[yPacman - 1, xPacman] == '*')
                                        {
                                            score += 100;
                                        }
                                        else if (map[yPacman - 1, xPacman] == 'Ж')
                                        {
                                            score += 1000;
                                        }
                                        map[yPacman, xPacman] = ' ';
                                        yPacman = yPacman - 1;
                                    }
                                }
                                else if (moove == "mooveDown")
                                {
                                    if (map[yPacman + 1, xPacman] != '|' && map[yPacman + 1, xPacman] != '+' && map[yPacman + 1, xPacman] != '-')
                                    {
                                        if (map[yPacman + 1, xPacman] == '*')
                                        {
                                            score += 100;
                                        }
                                        else if (map[yPacman + 1, xPacman] == 'Ж')
                                        {
                                            score += 1000;
                                        }
                                        map[yPacman, xPacman] = ' ';
                                        yPacman = yPacman + 1;
                                    }
                                }
                if (yPacman == 27 && xPacman == 46)
                {
                    xPacman = 1;
                }
                 
                if (yPacman == 27 && xPacman == 0)
                {
                    xPacman = 45;
                }


                Thread.Sleep(100);   
                #endregion
                }
            }




        }
    }


